# This file defines enumerations which are automatically generated by
# enumerations.py.
#
# The top-level structure is a list of objects, each of which defines one
# enumeration. Required entries are "namespace" and "enumeration" to define
# the type name, and "values" which is a list of the possible values. Numbering
# starts at zero, so the integer value of a certain enumeration value
# is the same as the zero-based index in the "values" list.
#
# If a "strings" list is given, functions toString() and fromString() will be
# generated in the enumeration's namespace. The members of the "strings" list
# are taken to be the string representations of the enumeration values.
#
# If "hasInvalidValue" is set to true, a special enumeration value "Invalid=-1"
# will be added. This is highly recommended if there's a chance that
# deserialization can fail, because -1 is returned then. Invalid serializes to
# QString().

# JSON decoder needs object in toplevel, so insert a dummy object
{"objects": [
	{
		"namespace": "QsdUnitType",
		"enumeration": "UnitType",
		"hasInvalidValue": true,
		"values": ["Service", "Socket", "Target", "Device", "Mount", "Automount", "Snapshot", "Timer", "Swap", "Path"],
		"strings": ["service", "socket", "target", "device", "mount", "automount", "snapshot", "timer", "swap", "path"]
	},
	{
		"namespace": "QsdLoadState",
		"enumeration": "LoadState",
		"hasInvalidValue": true,
		"values": ["Stub", "Loaded", "Error", "Merged", "Masked"],
		"strings": ["stub", "loaded", "error", "merged", "masked"]
	},
	{
		"namespace": "QsdActiveState",
		"enumeration": "ActiveState",
		"hasInvalidValue": true,
		"values": ["Active", "Reloading", "Inactive", "Failed", "Activating", "Deactivating"],
		"strings": ["active", "reloading", "inactive", "failed", "activating", "deactivating"]
	}
]}
